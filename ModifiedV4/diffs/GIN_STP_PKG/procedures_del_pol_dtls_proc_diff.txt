--- GIN_STP_PKG_HERITAGE_procedures_del_pol_dtls_proc.sql
+++ GIN_STP_PKG_NEW_GEMINIA_procedures_del_pol_dtls_proc.sql
@@ -1,109 +1,113 @@
 PROCEDURE del_pol_dtls_proc (v_pol_batch_no IN NUMBER)
-   IS
-      --v_successful NUMBER;
-      v_status    VARCHAR2 (10);
-      v_auths     VARCHAR2 (2);
-      v_err_pos   VARCHAR2 (75);
-      v_errmsg    VARCHAR2 (600);
+    IS
+        --v_successful NUMBER;
+        v_status      VARCHAR2 (10);
+        v_auths       VARCHAR2 (2);
+        v_err_pos     VARCHAR2 (75);
+        v_errmsg      VARCHAR2 (600);
+        v_error_msg   VARCHAR2 (600);
 
-      --v_cert_ipu_code NUMBER;
-      --v_cnt NUMBER;
-      CURSOR all_risks_cur
-      IS
-         SELECT ipu_code, pol_pro_code, ipu_id, ipu_property_id
-           FROM gin_insured_property_unds, gin_policies
-          WHERE ipu_pol_batch_no = pol_batch_no
-            AND ipu_pol_batch_no = v_pol_batch_no;
-   BEGIN
-      BEGIN
-         SELECT pol_authosrised, pol_policy_status
-           INTO v_auths, v_status
-           FROM gin_policies
-          WHERE pol_batch_no = v_pol_batch_no;
-      EXCEPTION
-         WHEN OTHERS
-         THEN
-            raise_application_error (-20001,
-                                     'THE TRANSACTION COULD NOT FOUND.....'
-                                    );
-      END;
+        --v_cert_ipu_code NUMBER;
+        --v_cnt NUMBER;
+        CURSOR all_risks_cur IS
+            SELECT ipu_code,
+                   pol_pro_code,
+                   ipu_id,
+                   ipu_property_id
+              FROM gin_insured_property_unds, gin_policies
+             WHERE     ipu_pol_batch_no = pol_batch_no
+                   AND ipu_pol_batch_no = v_pol_batch_no;
+    BEGIN
+        BEGIN
+            SELECT pol_authosrised, pol_policy_status
+              INTO v_auths, v_status
+              FROM gin_policies
+             WHERE pol_batch_no = v_pol_batch_no;
+        EXCEPTION
+            WHEN OTHERS
+            THEN
+                raise_application_error (
+                    -20001,
+                    'THE TRANSACTION COULD NOT FOUND.....');
+        END;
 
-      DBMS_OUTPUT.put_line (v_auths);
+        DBMS_OUTPUT.put_line (v_auths);
 
-      IF v_auths = 'A'
-      THEN
-         raise_error ('Cannot delete an authorised transactions..');
-      END IF;
+        IF v_auths = 'A'
+        THEN
+            raise_error ('Cannot delete an authorised transactions..');
+        END IF;
 
-      DBMS_OUTPUT.put_line (1111111);
+        DBMS_OUTPUT.put_line (1111111);
 
-      FOR all_risks_rec IN all_risks_cur
-      LOOP
-         del_risk_details (v_pol_batch_no,
-                           all_risks_rec.ipu_code,
-                           all_risks_rec.pol_pro_code
-                          );
-      END LOOP;
+        FOR all_risks_rec IN all_risks_cur
+        LOOP
+            del_risk_details (v_pol_batch_no,
+                              all_risks_rec.ipu_code,
+                              all_risks_rec.pol_pro_code,
+                              v_error_msg);
+        END LOOP;
 
-      -- Delete The Policy Details
-      v_err_pos := 'POLICY LEVEL TABLES';
+        -- Delete The Policy Details
+        v_err_pos := 'POLICY LEVEL TABLES';
 
-      DELETE FROM gin_policy_active_risks
-            WHERE polar_pol_batch_no = v_pol_batch_no;
+        DELETE FROM gin_policy_active_risks
+              WHERE polar_pol_batch_no = v_pol_batch_no;
 
-      DELETE FROM gin_policy_diary
-            WHERE pd_pol_batch_no = v_pol_batch_no;
+        DELETE FROM gin_policy_diary
+              WHERE pd_pol_batch_no = v_pol_batch_no;
 
-      DELETE FROM gin_policy_lvl_clauses
-            WHERE plcl_pol_batch_no = v_pol_batch_no;
+        DELETE FROM gin_policy_lvl_clauses
+              WHERE plcl_pol_batch_no = v_pol_batch_no;
 
-      DELETE FROM gin_policy_taxes
-            WHERE ptx_pol_batch_no = v_pol_batch_no;
+        DELETE FROM gin_policy_taxes
+              WHERE ptx_pol_batch_no = v_pol_batch_no;
 
-      DELETE FROM gin_coinsurers
-            WHERE coin_pol_batch_no = v_pol_batch_no;
+        DELETE FROM gin_coinsurers
+              WHERE coin_pol_batch_no = v_pol_batch_no;
 
-      DELETE FROM gin_policy_insureds
-            WHERE polin_pol_batch_no = v_pol_batch_no;
+        DELETE FROM gin_policy_insureds
+              WHERE polin_pol_batch_no = v_pol_batch_no;
 
-      DELETE FROM gin_facre_in_dtls
-            WHERE fid_pol_batch_no = v_pol_batch_no;
+        DELETE FROM gin_facre_in_dtls
+              WHERE fid_pol_batch_no = v_pol_batch_no;
 
-      ----COMMIT;
-      DELETE      gin_gis_transactions
-            WHERE ggt_pol_batch_no = v_pol_batch_no AND ggt_uw_clm_tran = 'U';
-            
-      DELETE FROM gin_policy_sbu_dtls
-            WHERE PDL_POL_BATCH_NO = v_pol_batch_no;
+        ----COMMIT;
+        DELETE gin_gis_transactions
+         WHERE ggt_pol_batch_no = v_pol_batch_no AND ggt_uw_clm_tran = 'U';
 
-      v_err_pos := 'POLICY';
+        DELETE FROM gin_policy_sbu_dtls
+              WHERE pdl_pol_batch_no = v_pol_batch_no;
 
-      DELETE FROM gin_policies
-            WHERE pol_batch_no = v_pol_batch_no;
+        v_err_pos := 'POLICY';
 
-      tqc_web_pkg.inactivate_tickets (v_pol_batch_no);
-      --COMMIT;
-      DBMS_OUTPUT.put_line (22222);
-   --:System.Message_Level := '0';
-   EXCEPTION
-      WHEN OTHERS
-      THEN
-         IF SQLCODE = -100501
-         THEN
-            v_errmsg :=
-                  'THE TRANSACTION COULD NOT BE DELETED AT '
-               || v_err_pos
-               || '.....';
-         ELSE
-            v_errmsg :=
-                  'THE TRANSACTION COULD NOT BE DELETED AT '
-               || v_err_pos
-               || ',ERROR :-'
-               || SQLERRM (SQLCODE);
-         END IF;
+        DELETE FROM gin_policies
+              WHERE pol_batch_no = v_pol_batch_no;
 
-         raise_error (v_errmsg);
-   END;
-   
-   
---
+        tqc_web_pkg.inactivate_tickets (v_pol_batch_no);
+        --COMMIT;
+        DBMS_OUTPUT.put_line (22222);
+    --:System.Message_Level := '0';
+    EXCEPTION
+        WHEN OTHERS
+        THEN
+            IF SQLCODE = -100501
+            THEN
+                v_errmsg :=
+                       'THE TRANSACTION COULD NOT BE DELETED AT '
+                    || v_err_pos
+                    || '.....'
+                    || v_error_msg;
+            ELSE
+                v_errmsg :=
+                       'THE TRANSACTION COULD NOT BE DELETED AT '
+                    || v_err_pos
+                    || ',ERROR :-'
+                    || SQLERRM (SQLCODE)
+                    || v_error_msg;
+            END IF;
+
+            v_error_msg := v_errmsg;
+            RETURN;
+    /*raise_error (v_errmsg);*/
+    END;
--- GIN_STP_PKG_HERITAGE_procedures_gin_ren_rsk_limits.sql
+++ GIN_STP_PKG_NEW_GEMINIA_procedures_gin_ren_rsk_limits.sql
@@ -1,280 +1,399 @@
-PROCEDURE gin_ren_rsk_limits (
-      v_new_ipu_code    IN   NUMBER,
-      v_scl_code        IN   NUMBER,
-      v_bind_code       IN   NUMBER,
-      v_sect_code       IN   NUMBER,
-      v_limit           IN   NUMBER,
-      v_row             IN   NUMBER,
-      v_add_edit        IN   VARCHAR2,
-      v_rsk_sect_data   IN   web_sect_tab
-   )
-   IS
-      v_sect_sht_desc            VARCHAR2 (30);
-      v_sect_desc                VARCHAR2 (80);
-      v_sect_type                VARCHAR2 (30);
-      v_type_desc                VARCHAR2 (30);
-      v_prr_rate_type            VARCHAR2 (10);
-      v_prr_rate                 NUMBER;
-      v_terr_description         VARCHAR2 (30);
-      v_prr_prem_minimum_amt     NUMBER;
-      v_prr_multiplier_rate      NUMBER;
-      v_prr_division_factor      NUMBER;
-      v_prr_multplier_div_fact   NUMBER;
-      v_prr_rate_desc            VARCHAR2 (30);
-
-      CURSOR pil_cur (
-         vsectcode   IN   NUMBER,
-         vbindcode   IN   NUMBER,
-         vsclcode    IN   NUMBER
-      )
-      IS
-         SELECT sect_sht_desc, sect_desc, sect_type, type_desc,
-                prr_rate_type, prr_rate, terr_description,
-                prr_prem_minimum_amt, prr_multiplier_rate,
-                prr_division_factor, prr_multplier_div_fact, prr_rate_desc
-           FROM (SELECT DISTINCT sect_sht_desc, sect_code,
-                                 sect_desc sect_desc, sect_type,
-                                 DECODE (sect_type,
-                                         'ES', 'EXTENSION SI',
-                                         'EL', 'EXTENSION LIMIT',
-                                         'SS', 'SECTION SI',
-                                         'SL', 'SECTION LIMIT',
-                                         'DS', 'DISCOUNT',
-                                         'LO', 'LOADING',
-                                         'EC', 'ESCALATION'
-                                        ) type_desc,
-                                 prr_rate_type, prr_rate, prr_rate rate,
-                                 '0' terr_description, prr_prem_minimum_amt,
-                                 prr_multiplier_rate, prr_division_factor,
-                                 prr_multplier_div_fact, prr_rate_desc
-                            FROM gin_premium_rates, gin_sections
-                           WHERE prr_sect_code = sect_code
-                             AND sect_code = vsectcode
-                             AND prr_bind_code = vbindcode
-                             AND prr_scl_code = vsclcode
-                             AND sect_type != 'ND'
-                             AND prr_rate_type = 'FXD'
-                 UNION
-                 SELECT DISTINCT sect_sht_desc, sect_code,
-                                 sect_desc sect_desc, sect_type,
-                                 DECODE (sect_type,
-                                         'ES', 'EXTENSION SI',
-                                         'EL', 'EXTENSION LIMIT',
-                                         'SS', 'SECTION SI',
-                                         'SL', 'SECTION LIMIT',
-                                         'DS', 'DISCOUNT',
-                                         'LO', 'LOADING',
-                                         'EC', 'ESCALATION'
-                                        ) type_desc,
-                                 prr_rate_type, 0 prr_rate, 0 rate,
-                                 '0' terr_description, 0 prr_prem_minimum_amt,
-                                 1 prr_multiplier_rate, 1 prr_division_factor,
-                                 1 prr_multplier_div_fact, prr_rate_desc
-                            FROM gin_premium_rates, gin_sections
-                           WHERE prr_sect_code = sect_code
-                             AND sect_code = vsectcode
-                             AND prr_bind_code = vbindcode
-                             AND prr_scl_code = vsclcode
-                             AND sect_type != 'ND'
-                             AND prr_rate_type IN ('SRG', 'RCU')
-                 UNION
-                 SELECT DISTINCT sect_sht_desc, sect_code,
-                                 sect_desc sect_desc, sect_type,
-                                 DECODE (sect_type,
-                                         'ES', 'EXTENSION SI',
-                                         'EL', 'EXTENSION LIMIT',
-                                         'SS', 'SECTION SI',
-                                         'SL', 'SECTION LIMIT',
-                                         'DS', 'DISCOUNT',
-                                         'LO', 'LOADING',
-                                         'EC', 'ESCALATION'
-                                        ) type_desc,
-                                 prr_rate_type, 0 prr_rate, 0 rate,
-                                 '0' terr_description, 0 prr_prem_minimum_amt,
-                                 1 prr_multiplier_rate, 1 prr_division_factor,
-                                 1 prr_multplier_div_fact, prr_rate_desc
-                            FROM gin_premium_rates, gin_sections
-                           WHERE prr_sect_code = sect_code
-                             AND sect_code = vsectcode
-                             AND prr_bind_code = vbindcode
-                             AND prr_scl_code = vsclcode
-                             AND sect_type != 'ND'
-                             AND prr_rate_type = 'ARG'
-                 UNION
-                 SELECT DISTINCT sect_sht_desc, sect_code,
-                                 sect_desc sect_desc, sect_type,
-                                 DECODE (sect_type, 'ND', 'NCD') type_desc,
-                                 prr_rate_type, prr_rate, prr_rate rate,
-                                 '0' terr_description, prr_prem_minimum_amt,
-                                 prr_multiplier_rate, prr_division_factor,
-                                 prr_multplier_div_fact, prr_rate_desc
-                            FROM gin_premium_rates, gin_sections
-                           WHERE prr_sect_code = sect_code
-                             AND sect_code = vsectcode
-                             AND prr_bind_code = vbindcode
-                             AND prr_scl_code = vsclcode
-                             AND sect_type = 'ND');
-   BEGIN
-      BEGIN
-         OPEN pil_cur (v_sect_code, v_bind_code, v_scl_code);
-
-         LOOP
-            EXIT WHEN pil_cur%NOTFOUND;
-
-            FETCH pil_cur
-             INTO v_sect_sht_desc, v_sect_desc, v_sect_type, v_type_desc,
-                  v_prr_rate_type, v_prr_rate, v_terr_description,
-                  v_prr_prem_minimum_amt, v_prr_multiplier_rate,
-                  v_prr_division_factor, v_prr_multplier_div_fact,
-                  v_prr_rate_desc;
-         END LOOP;
-
-         CLOSE pil_cur;
-      EXCEPTION
-         WHEN OTHERS
-         THEN
-            raise_error
-                      (   'Error getting the premium rates for 1st section..'
-                       || v_sect_code
-                       || '-'
-                       || v_bind_code
-                       || '-'
-                       || v_scl_code
-                      );
-      END;
-
-      IF NVL (v_add_edit, 'A') = 'A'
-      THEN
-         BEGIN
-            INSERT INTO gin_ren_policy_insured_limits
-                        (pil_code,
-                         pil_ipu_code, pil_sect_code, pil_sect_sht_desc,
-                         pil_desc,
-                         pil_row_num,
-                         pil_calc_group,
-                         pil_limit_amt,
-                         pil_prem_rate,
-                         pil_prem_amt,
-                         pil_rate_type, pil_rate_desc, pil_sect_type,
-                         pil_original_prem_rate,
-                         pil_multiplier_rate,
-                         pil_multiplier_div_factor,
-                         pil_annual_premium,
-                         pil_rate_div_fact,
-                         --PIL_DESC,
-                         pil_compute, pil_prd_type,
-                         pil_dual_basis, pil_prem_accumulation,
-                         pil_declaration_section,
-                         pil_annual_actual_prem, pil_comment,
-                         pil_free_limit,
-                         pil_limit_prd,
-                         pil_prorata_full,
-                         pil_si_limit_type,
-                         pil_si_rate,
-                         pil_cover_type,
-                         pil_min_premium
-                        )
-                 VALUES (TO_CHAR (SYSDATE, 'RRRR') || gin_pil_code_seq.NEXTVAL,
-                         v_new_ipu_code, v_sect_code, v_sect_sht_desc,
-                         NVL (v_rsk_sect_data (1).pil_desc, v_sect_desc),
-                         NVL (v_row, 1),
-                         NVL (v_rsk_sect_data (1).pil_calc_group, 1),
-                         NVL (v_rsk_sect_data (1).pil_limit_amt, v_limit),
-                         NVL (v_rsk_sect_data (1).pil_prem_rate, v_prr_rate),
-                         NVL (v_rsk_sect_data (1).pil_prem_amt, 0),
-                         v_prr_rate_type, v_prr_rate_desc, v_sect_type,
+PROCEDURE gin_ren_rsk_limits (v_new_ipu_code    IN NUMBER,
+                                  v_scl_code        IN NUMBER,
+                                  v_bind_code       IN NUMBER,
+                                  v_sect_code       IN NUMBER,
+                                  v_limit           IN NUMBER,
+                                  v_row             IN NUMBER,
+                                  v_add_edit        IN VARCHAR2,
+                                  v_rsk_sect_data   IN web_sect_tab)
+    IS
+        v_sect_sht_desc            VARCHAR2 (30);
+        v_sect_desc                VARCHAR2 (80);
+        v_sect_type                VARCHAR2 (30);
+        v_type_desc                VARCHAR2 (30);
+        v_prr_rate_type            VARCHAR2 (10);
+        v_prr_rate                 NUMBER;
+        v_terr_description         VARCHAR2 (30);
+        v_prr_prem_minimum_amt     NUMBER;
+        v_prr_multiplier_rate      NUMBER;
+        v_prr_division_factor      NUMBER;
+        v_prr_multplier_div_fact   NUMBER;
+        v_prr_rate_desc            VARCHAR2 (30);
+
+        --       v_calc_group  NUMBER:=1;
+        --      v_calc_row  NUMBER:=1;
+
+        CURSOR pil_cur (vsectcode   IN NUMBER,
+                        vbindcode   IN NUMBER,
+                        vsclcode    IN NUMBER)
+        IS
+            SELECT sect_sht_desc,
+                   sect_desc,
+                   sect_type,
+                   type_desc,
+                   prr_rate_type,
+                   prr_rate,
+                   terr_description,
+                   prr_prem_minimum_amt,
+                   prr_multiplier_rate,
+                   prr_division_factor,
+                   prr_multplier_div_fact,
+                   prr_rate_desc
+              FROM (SELECT DISTINCT
+                           sect_sht_desc,
+                           sect_code,
+                           sect_desc                      sect_desc,
+                           sect_type,
+                           DECODE (sect_type,
+                                   'ES', 'EXTENSION SI',
+                                   'EL', 'EXTENSION LIMIT',
+                                   'SS', 'SECTION SI',
+                                   'SL', 'SECTION LIMIT',
+                                   'DS', 'DISCOUNT',
+                                   'LO', 'LOADING',
+                                   'EC', 'ESCALATION')    type_desc,
+                           prr_rate_type,
+                           prr_rate,
+                           prr_rate                       rate,
+                           '0'                            terr_description,
+                           prr_prem_minimum_amt,
+                           prr_multiplier_rate,
+                           prr_division_factor,
+                           prr_multplier_div_fact,
+                           prr_rate_desc
+                      FROM gin_premium_rates, gin_sections
+                     WHERE     prr_sect_code = sect_code
+                           AND sect_code = vsectcode
+                           AND prr_bind_code = vbindcode
+                           AND prr_scl_code = vsclcode
+                           AND sect_type != 'ND'
+                           AND prr_rate_type = 'FXD'
+                    UNION
+                    SELECT DISTINCT
+                           sect_sht_desc,
+                           sect_code,
+                           sect_desc
+                               sect_desc,
+                           sect_type,
+                           DECODE (sect_type,
+                                   'ES', 'EXTENSION SI',
+                                   'EL', 'EXTENSION LIMIT',
+                                   'SS', 'SECTION SI',
+                                   'SL', 'SECTION LIMIT',
+                                   'DS', 'DISCOUNT',
+                                   'LO', 'LOADING',
+                                   'EC', 'ESCALATION')
+                               type_desc,
+                           prr_rate_type,
+                           0
+                               prr_rate,
+                           0
+                               rate,
+                           '0'
+                               terr_description,
+                           0
+                               prr_prem_minimum_amt,
+                           1
+                               prr_multiplier_rate,
+                           1
+                               prr_division_factor,
+                           1
+                               prr_multplier_div_fact,
+                           prr_rate_desc
+                      FROM gin_premium_rates, gin_sections
+                     WHERE     prr_sect_code = sect_code
+                           AND sect_code = vsectcode
+                           AND prr_bind_code = vbindcode
+                           AND prr_scl_code = vsclcode
+                           AND sect_type != 'ND'
+                           AND prr_rate_type IN ('SRG', 'RCU')
+                    UNION
+                    SELECT DISTINCT
+                           sect_sht_desc,
+                           sect_code,
+                           sect_desc
+                               sect_desc,
+                           sect_type,
+                           DECODE (sect_type,
+                                   'ES', 'EXTENSION SI',
+                                   'EL', 'EXTENSION LIMIT',
+                                   'SS', 'SECTION SI',
+                                   'SL', 'SECTION LIMIT',
+                                   'DS', 'DISCOUNT',
+                                   'LO', 'LOADING',
+                                   'EC', 'ESCALATION')
+                               type_desc,
+                           prr_rate_type,
+                           0
+                               prr_rate,
+                           0
+                               rate,
+                           '0'
+                               terr_description,
+                           0
+                               prr_prem_minimum_amt,
+                           1
+                               prr_multiplier_rate,
+                           1
+                               prr_division_factor,
+                           1
+                               prr_multplier_div_fact,
+                           prr_rate_desc
+                      FROM gin_premium_rates, gin_sections
+                     WHERE     prr_sect_code = sect_code
+                           AND sect_code = vsectcode
+                           AND prr_bind_code = vbindcode
+                           AND prr_scl_code = vsclcode
+                           AND sect_type != 'ND'
+                           AND prr_rate_type = 'ARG'
+                    UNION
+                    SELECT DISTINCT
+                           sect_sht_desc,
+                           sect_code,
+                           sect_desc
+                               sect_desc,
+                           sect_type,
+                           DECODE (sect_type, 'ND', 'NCD')
+                               type_desc,
+                           prr_rate_type,
+                           prr_rate,
+                           prr_rate
+                               rate,
+                           '0'
+                               terr_description,
+                           prr_prem_minimum_amt,
+                           prr_multiplier_rate,
+                           prr_division_factor,
+                           prr_multplier_div_fact,
+                           prr_rate_desc
+                      FROM gin_premium_rates, gin_sections
+                     WHERE     prr_sect_code = sect_code
+                           AND sect_code = vsectcode
+                           AND prr_bind_code = vbindcode
+                           AND prr_scl_code = vsclcode
+                           AND sect_type = 'ND');
+    BEGIN
+        BEGIN
+            OPEN pil_cur (v_sect_code, v_bind_code, v_scl_code);
+
+            LOOP
+                EXIT WHEN pil_cur%NOTFOUND;
+
+                FETCH pil_cur
+                    INTO v_sect_sht_desc,
+                         v_sect_desc,
+                         v_sect_type,
+                         v_type_desc,
+                         v_prr_rate_type,
                          v_prr_rate,
-                         NVL (v_rsk_sect_data (1).pil_multiplier_rate,
-                              v_prr_multiplier_rate
-                             ),
-                         NVL (v_rsk_sect_data (1).pil_multiplier_div_factor,
-                              v_prr_multplier_div_fact
-                             ),
-                         0,
-                         NVL (v_rsk_sect_data (1).pil_rate_div_fact,
-                              v_prr_division_factor
-                             ),
-                         --v_type_desc,
-                         NVL (v_rsk_sect_data (1).pil_compute, 'Y'), NULL,
-                         NVL (v_rsk_sect_data (1).pil_dual_basis, 'N'), 0,
-                         NVL (v_rsk_sect_data (1).pil_declaration_section,
-                              'N'),
-                         0, v_rsk_sect_data (1).pil_comment,
-                         v_rsk_sect_data (1).pil_free_limit_amt,
-                         v_rsk_sect_data (1).pil_limit_prd,
-                         v_rsk_sect_data (1).pil_prorata_full,
-                         v_rsk_sect_data (1).pil_si_limit_type,
-                         v_rsk_sect_data (1).pil_si_rate,
-                         v_rsk_sect_data (1).pil_cover_type,
-                         NVL (v_rsk_sect_data (1).pil_min_premium,
-                              v_prr_prem_minimum_amt
-                             )
-                        );
-         EXCEPTION
+                         v_terr_description,
+                         v_prr_prem_minimum_amt,
+                         v_prr_multiplier_rate,
+                         v_prr_division_factor,
+                         v_prr_multplier_div_fact,
+                         v_prr_rate_desc;
+            END LOOP;
+
+            CLOSE pil_cur;
+        EXCEPTION
             WHEN OTHERS
             THEN
-               raise_error ('Error inserting risk sections..');
-         END;
-      ELSE
-         BEGIN
-            UPDATE gin_ren_policy_insured_limits
-               SET
-                   --PIL_SECT_CODE=v_sect_code, PIL_SECT_SHT_DESC=v_sect_sht_desc,
-                   pil_limit_amt =
-                              NVL (v_rsk_sect_data (1).pil_limit_amt, v_limit),
-                   pil_prem_rate =
-                           NVL (v_rsk_sect_data (1).pil_prem_rate, v_prr_rate),
-                   pil_sect_type = v_sect_type,
-                   pil_min_premium = v_prr_prem_minimum_amt,
-                   pil_rate_type = v_prr_rate_type,
-                   pil_rate_desc = v_prr_rate_desc,
-                   pil_rate_div_fact =
-                      NVL (v_rsk_sect_data (1).pil_rate_div_fact,
-                           v_prr_division_factor
-                          ),
-                   pil_multiplier_rate =
-                      NVL (v_rsk_sect_data (1).pil_multiplier_rate,
-                           v_prr_multiplier_rate
-                          ),
-                   pil_multiplier_div_factor =
-                      NVL (v_rsk_sect_data (1).pil_multiplier_div_factor,
-                           v_prr_multplier_div_fact
-                          ),
-                   pil_row_num = NVL (v_row, pil_row_num),
-                   pil_compute = NVL (v_rsk_sect_data (1).pil_compute, 'Y'),
-                   pil_desc = NVL (v_rsk_sect_data (1).pil_desc, v_sect_desc),
-                   pil_dual_basis =
-                                 NVL (v_rsk_sect_data (1).pil_dual_basis, 'N'),
-                   pil_calc_group =
-                                   NVL (v_rsk_sect_data (1).pil_calc_group, 1),
-                   pil_prem_amt = NVL (v_rsk_sect_data (1).pil_prem_amt, 0),
-                   pil_comment = v_rsk_sect_data (1).pil_comment,
-                   pil_declaration_section =
-                        NVL (v_rsk_sect_data (1).pil_declaration_section, 'N'),
-                   pil_free_limit_amt = v_rsk_sect_data (1).pil_free_limit_amt,
-                   pil_limit_prd = v_rsk_sect_data (1).pil_limit_prd,
-                   pil_prorata_full =
-                      NVL (v_rsk_sect_data (1).pil_prorata_full,
-                           pil_prorata_full
-                          )
-             WHERE pil_ipu_code = v_new_ipu_code
-               AND pil_code = v_rsk_sect_data (1).pil_code;
-         EXCEPTION
+                raise_error (
+                       'Error getting the premium rates for 1st section..'
+                    || v_sect_code
+                    || '-'
+                    || v_bind_code
+                    || '-'
+                    || v_scl_code);
+        END;
+
+        IF NVL (v_add_edit, 'A') = 'A'
+        THEN
+            BEGIN
+                --           begin
+                --               select DISTINCT SCVTS_ORDER,SCVTS_CALC_GROUP
+                --
+                --                INTO v_calc_row,v_calc_group
+                --
+                --                from GIN_SUBCL_COVT_SECTIONS
+                --                where SCVTS_SECT_CODE=v_sect_code
+                --                and SCVTS_SCL_CODE=v_scl_code
+                --                AND SCVTS_COVT_CODE IN (
+                --                  SELECT  IPU_COVT_CODE
+                --                  FROM GIN_INSURED_PROPERTY_UNDS
+                --                  WHERE  IPU_CODE=v_new_ipu_code
+                --
+                --                );
+                --               EXCEPTION WHEN OTHERS THEN
+                --               v_calc_group :=1;
+                --               v_calc_row :=1;
+                --               end;
+
+                INSERT INTO gin_ren_policy_insured_limits (
+                                pil_code,
+                                pil_ipu_code,
+                                pil_sect_code,
+                                pil_sect_sht_desc,
+                                pil_desc,
+                                pil_row_num,
+                                pil_calc_group,
+                                pil_limit_amt,
+                                pil_prem_rate,
+                                pil_prem_amt,
+                                pil_rate_type,
+                                pil_rate_desc,
+                                pil_sect_type,
+                                pil_original_prem_rate,
+                                pil_multiplier_rate,
+                                pil_multiplier_div_factor,
+                                pil_annual_premium,
+                                pil_rate_div_fact,
+                                --PIL_DESC,
+                                pil_compute,
+                                pil_prd_type,
+                                pil_dual_basis,
+                                pil_prem_accumulation,
+                                pil_declaration_section,
+                                pil_annual_actual_prem,
+                                pil_comment,
+                                pil_free_limit,
+                                pil_limit_prd,
+                                pil_prorata_full,
+                                pil_si_limit_type,
+                                pil_si_rate,
+                                pil_cover_type,
+                                pil_min_premium,
+                                pil_firstloss,
+                                pil_firstloss_amt_pcnt,
+                                pil_firstloss_value)
+                         VALUES (
+                                       TO_CHAR (SYSDATE, 'RRRR')
+                                    || gin_pil_code_seq.NEXTVAL,
+                                    v_new_ipu_code,
+                                    v_sect_code,
+                                    v_sect_sht_desc,
+                                    NVL (v_rsk_sect_data (1).pil_desc,
+                                         v_sect_desc),
+                                    NVL (v_row, 1),
+                                    NVL (v_rsk_sect_data (1).pil_calc_group,
+                                         1),
+                                    --                          NVL (nvl(v_calc_row,v_row), 1),
+                                    --                           NVL (NVL(v_calc_group,v_rsk_sect_data (1).pil_calc_group), 1),
+                                    NVL (v_rsk_sect_data (1).pil_limit_amt,
+                                         v_limit),
+                                    NVL (v_rsk_sect_data (1).pil_prem_rate,
+                                         v_prr_rate),
+                                    NVL (v_rsk_sect_data (1).pil_prem_amt, 0),
+                                    v_prr_rate_type,
+                                    v_prr_rate_desc,
+                                    v_sect_type,
+                                    v_prr_rate,
+                                    NVL (
+                                        v_rsk_sect_data (1).pil_multiplier_rate,
+                                        v_prr_multiplier_rate),
+                                    NVL (
+                                        v_rsk_sect_data (1).pil_multiplier_div_factor,
+                                        v_prr_multplier_div_fact),
+                                    0,
+                                    NVL (
+                                        v_rsk_sect_data (1).pil_rate_div_fact,
+                                        v_prr_division_factor),
+                                    --v_type_desc,
+                                    NVL (v_rsk_sect_data (1).pil_compute,
+                                         'Y'),
+                                    NULL,
+                                    NVL (v_rsk_sect_data (1).pil_dual_basis,
+                                         'N'),
+                                    0,
+                                    NVL (
+                                        v_rsk_sect_data (1).pil_declaration_section,
+                                        'N'),
+                                    0,
+                                    v_rsk_sect_data (1).pil_comment,
+                                    v_rsk_sect_data (1).pil_free_limit_amt,
+                                    v_rsk_sect_data (1).pil_limit_prd,
+                                    v_rsk_sect_data (1).pil_prorata_full,
+                                    v_rsk_sect_data (1).pil_si_limit_type,
+                                    v_rsk_sect_data (1).pil_si_rate,
+                                    v_rsk_sect_data (1).pil_cover_type,
+                                    NVL (v_rsk_sect_data (1).pil_min_premium,
+                                         v_prr_prem_minimum_amt),
+                                    v_rsk_sect_data (1).pil_firstloss,
+                                    v_rsk_sect_data (1).pil_firstloss_amt_pcnt,
+                                    v_rsk_sect_data (1).pil_firstloss_value);
+            EXCEPTION
+                WHEN OTHERS
+                THEN
+                    raise_error ('Error inserting risk sections..');
+            END;
+        ELSE
+            BEGIN
+                UPDATE gin_ren_policy_insured_limits
+                   SET --PIL_SECT_CODE=v_sect_code, PIL_SECT_SHT_DESC=v_sect_sht_desc,
+                       pil_limit_amt =
+                           NVL (v_rsk_sect_data (1).pil_limit_amt, v_limit),
+                       pil_prem_rate =
+                           NVL (v_rsk_sect_data (1).pil_prem_rate,
+                                v_prr_rate),
+                       pil_sect_type = v_sect_type,
+                       pil_min_premium = v_prr_prem_minimum_amt,
+                       pil_rate_type = v_prr_rate_type,
+                       pil_rate_desc = v_prr_rate_desc,
+                       pil_rate_div_fact =
+                           NVL (v_rsk_sect_data (1).pil_rate_div_fact,
+                                v_prr_division_factor),
+                       pil_multiplier_rate =
+                           NVL (v_rsk_sect_data (1).pil_multiplier_rate,
+                                v_prr_multiplier_rate),
+                       pil_multiplier_div_factor =
+                           NVL (
+                               v_rsk_sect_data (1).pil_multiplier_div_factor,
+                               v_prr_multplier_div_fact),
+                       pil_row_num = NVL (v_row, pil_row_num),
+                       pil_compute =
+                           NVL (v_rsk_sect_data (1).pil_compute, 'Y'),
+                       pil_desc =
+                           NVL (v_rsk_sect_data (1).pil_desc, v_sect_desc),
+                       pil_dual_basis =
+                           NVL (v_rsk_sect_data (1).pil_dual_basis, 'N'),
+                       pil_calc_group =
+                           NVL (v_rsk_sect_data (1).pil_calc_group, 1),
+                       pil_prem_amt =
+                           NVL (v_rsk_sect_data (1).pil_prem_amt, 0),
+                       pil_comment = v_rsk_sect_data (1).pil_comment,
+                       pil_declaration_section =
+                           NVL (v_rsk_sect_data (1).pil_declaration_section,
+                                'N'),
+                       pil_free_limit_amt =
+                           v_rsk_sect_data (1).pil_free_limit_amt,
+                       pil_limit_prd = v_rsk_sect_data (1).pil_limit_prd,
+                       pil_prorata_full =
+                           NVL (v_rsk_sect_data (1).pil_prorata_full,
+                                pil_prorata_full),
+                       pil_firstloss = v_rsk_sect_data (1).pil_firstloss,
+                       pil_firstloss_amt_pcnt =
+                           v_rsk_sect_data (1).pil_firstloss_amt_pcnt,
+                       pil_firstloss_value =
+                           v_rsk_sect_data (1).pil_firstloss_value
+                 WHERE     pil_ipu_code = v_new_ipu_code
+                       AND pil_code = v_rsk_sect_data (1).pil_code;
+            EXCEPTION
+                WHEN OTHERS
+                THEN
+                    raise_error ('Error updating risk sections..');
+            END;
+        END IF;
+
+        BEGIN
+            UPDATE gin_ren_policies
+               SET pol_prem_computed = 'N'
+             WHERE pol_batch_no = (SELECT ipu_pol_batch_no
+                                     FROM gin_insured_property_unds
+                                    WHERE ipu_code = v_new_ipu_code);
+        EXCEPTION
             WHEN OTHERS
             THEN
-               raise_error ('Error updating risk sections..');
-         END;
-      END IF;
-
-      BEGIN
-         UPDATE gin_ren_policies
-            SET pol_prem_computed = 'N'
-          WHERE pol_batch_no = (SELECT ipu_pol_batch_no
-                                  FROM gin_insured_property_unds
-                                 WHERE ipu_code = v_new_ipu_code);
-      EXCEPTION
-         WHEN OTHERS
-         THEN
-            raise_error ('Error updating policy premium status to changed');
-      END;
-   END;
+                raise_error (
+                    'Error updating policy premium status to changed');
+        END;
+    END;